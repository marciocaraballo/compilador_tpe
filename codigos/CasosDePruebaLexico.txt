<< este programa es una demo de algunos casos
considerados para el analizador lexico, mezclando errores
y casos validos. Recordar que el lexico solo valida
constantes numericas positivas!>>
program1 {
	variable1 =: 0; <<minimo valor valido>>
	variable2 =: 65535; <<maximo valor valido>>
	variable4 =: 65536; <<warning: mayor al maximo permitido>>
	variable4 =: 123123112; <<warning: menor al minimo permitido>>
	
	variable5 =: 5.; <<valor valido>>
	variable6 =: 5.12; <<valor valido>>
	
	variable7 =: .15; <<valor valido>>
	variable8 =: .5D+12; <<valor valido>>
	variable9 =: .6D-5; <<valor valido>>
	
	variable10 =: 8.6D+1; <<valor valido>>
	variable11 =: 0.0; <<valor valido>>
	
	variable12 =: 1.7976931348623157D+308; <<maximo valor permitido>>
	variable13 =: 1.7976931348623157D+312; <<warning: se supera el valor maximo>>
	
	variable14 =: 2.2250738585072014D-308; <<minimo valor permitido>>
	variable15 =: 2.2250738585072014D-312; <<warning: inferior al valor minimo>>
	
	ui16 id; <<formato valido>>
	ui16 esteesunidentificadorconmasde25caracteres; <<se trunca>>
	f64 varios_SIMBOLOS_17; <<formato valido>> 
	
	ui16 id_con_numero_12312_; <<formato valido>>
	
	ui16 variable_12_!#; <<reconoce ui como identificador, descarta el ! y # con error >>
	
	ui16 IF; <<IF se reconoce como identificador>>
	f64 THEN; <<THEN se reconoce como identificador>>
	f64 ELSE; <<ELSE se reconoce como identificador>>
	
	<<Comentario Bien escrito>>
	
	<<Comentario con salto de lin
	>>
	
	out('Cadena de caracteres bien escrita');	<<cadena bien escrita>>
	
	out('Cadena de caracteres mal escrita); <<va a descartar la cadena mal escrita porque esta incompleta>>
}