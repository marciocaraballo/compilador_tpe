{
	*{ Idententificador de menos de 20 caracteres, se reconoce }*
	INT identificador,

	*{ Identificador de mas de 20 caracteres, se trunca }*
	FLOAT soyunidentificadormuylargo,
	
	*{ Identificador con letras, digitos, _ se reconoce}*
	INT _un_identificador_22,
	
	*{ Identificador con caracter invalido, se descartan # y ! }*
	INT _un_ident#!ficador_22,
	
	*{ Valor minimo valido para INT, se reconoce correctamente }*
	a = -32768_i,
	
	*{ Valor maximo valido para INT, se reconoce correctamente }*
	a = 32767_i,
	
	*{ Valor fuera de rango para INT positiva, se trunca a 32767_i }*
	a = 32768_i,
	
	*{ Valor fuera de rango para INT positiva, se trunca a 32767_i }*
	a = 50000_i,

	*{ Valor fuera de rango para INT negativa, se trunca a -32768_i }*
	a = -50000_i,
	
	*{ Valor fuera de rango para ULONG negativa, se trunca a 0_ul }*
	a = -50000_ul,
	
	*{ Valor fuera de rango para ULONG positivo, se trunca a 4294967295_ul }*
	a = 50000000000000_ul,
	
	*{ Valor fuera de rango para FLOAT positivo, se trunca a 3.40282347E+38 }*
	a = 5.40282347E+38,
	
	*{ Valor fuera de rango para FLOAT negativo, se trunca a ??? }*
	a = -5.40282347E+38,
	
	*{ Valor 0.0 valido para FLOAT }*
	a = 0.0,	
	
	*{ Sintaxis valida para FLOAT }*
	a = 1., 
	a = .6, 
	a = -1.2, 
	a = 3.e-5, 
	a = 2.E+34, 
	a = 2.5E-1, 
	a = 15., 
	a = 0., 
	a = 1.2e+10,
	
	*{ Palabras reservadas en sentencia de seleccion }*
	IF (a > b) 
		a = b,
	ELSE 
		b = a,
	END_IF,
	
	*{ Palabras reservadas en sentencia de iteracion }*
	DO 
		a = b,
	WHILE (b > a),
	
	*{ Palabras reservadas en minuscula, se reconocen como identificador }*
	INT if,
	FLOAT class,
	
	*{ Comentario sin terminar , se informa que el programa esta incorrecto porque
	el '}' al final sera abarcado por el comentario sin terminar *
}